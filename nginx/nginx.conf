worker_processes  1;

events {
  worker_connections  1024;
}

http {
  server {
    # listen 443 ssl http2;
    listen 80 default_server;
    server_name app.weworklabs.com;

    # ssl_certificate /etc/letsencrypt/live/weworklabs.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/weworklabs.com/privkey.pem;

    error_log /var/log/nginx/error.log debug;
    root  /usr/local/nginx/html;

    index index.html;

    # Any request to this server will first be sent to this URL
    auth_request /lasso-validate;

    location = /lasso-validate {
      # This address is where Lasso will be listening on
      proxy_pass http://127.0.0.1:9090/validate;
      proxy_pass_request_body off; # no need to send the POST body

      proxy_set_header Content-Length "";
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # these return values are passed to the @error401 call
      auth_request_set $auth_resp_jwt $upstream_http_x_lasso_jwt;
      auth_request_set $auth_resp_err $upstream_http_x_lasso_err;
      auth_request_set $auth_resp_failcount $upstream_http_x_lasso_failcount;
    }

    error_page 401 = @error401;

    # If the user is not logged in, redirect them to Lasso's login URL
    location @error401 {
      return 302 https://login.weworklabs.com/login?url=https://$http_host$request_uri&lasso-failcount=$auth_resp_failcount&X-Lasso-Token=$auth_resp_jwt&error=$auth_resp_err;
    }
  }
}
